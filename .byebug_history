quit
c
quit
c
pos
quit
continue
up
board
quit
continue
up
c
up
board
continue
@board.class
@board
continue
pos
up
col
row
pos
c
pos
c
pos
c
pos
c
continue
up
pos
down
pos
col
row
up
pos
down
pos
up
col
row
pos
n
down
start_pos
color
down
up
down
n
start_pos
end_pos
curr_piece.class
n
up
u
n
color
start_pos
down
curr_piece
color
up
end_pos
start_pos
curr_piece.class
curr_piece
n
pos
curr_piece.class
c
end_pos
start_pos
up
pos
n
down
n
down
up
down
n
curr_piece.class
curr_piece
cur_piece
end_pos
n
down
end_pos
up
help
@board[4][7]
pos
c
@board[0][3].pos
@board[0][3]
pos
c
@board
continue
king_pos.color
king_pos
p king_pos
n
quit
self.class
self
n
self.class
n
@h_delta
s
n
possible_moves
n
s
c_piece.color
c_piece.class
s
curr_pieces.inspect
n
king_pos
n
s
n
s
v_pos
s
self.is_a?(SlidingPieces)
self.class
s
n
values_pos
n
values_pos
n
values_pos
s
values_pos
s
values_pos
s
values_pos
s
values_pos
s
values_pos
s
values_pos
s
values_pos
s
self.pos
self_pos
@h_delta
delta_k
values_pos
s
values_pos
s
values_pos
delta_k
s
possible_moves
n
s
n
s
quit
possible_moves
n
s
self.class
s
n
s
n
s
n
possible_moves
n
s
c_piece.class
s
n
king_pos
n
s
n
s
c_piece.new_moves
c_piece.color
c_piece.pos
c_piece.new_moves.include?(king_pos)
color
c_piece.color
c_piece.class
s
n
king_pos
n
s
quit
color
n
king_pos
n
color
s
in_check?(color)
new_board.class
new_board.in_check?(color)
n
s
n
quit
display.render
board.render
new_board.render
new_board.in_check?(color)
s
end_pos
curr_piece.pos
s
self[start_pos].class
self[end_pos].class
s
curr_piece.class
curr_piece
n
s
n
quit
self[start_pos].new_moves
self[start_pos].class
curr_piece.new_moves.empty?
curr_piece.class
curr_piece.new_moves
s
end_pos
start_pos
s
n
curr_piece.class
s
n
self.object_id
new_board.object_id
new_board.class
s
n
s
